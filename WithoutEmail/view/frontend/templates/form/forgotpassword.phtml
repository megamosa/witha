<?php
/**
 * MagoArab WithoutEmail - Forgot Password Template
 *
 * @var $block \Magento\Customer\Block\Account\Forgotpassword
 */
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$configHelper = $objectManager->get(\MagoArab\WithoutEmail\Helper\Config::class);
$isHybridMode = $configHelper->isHybridMode();

// Get country information
$directoryHelper = $objectManager->get(\Magento\Directory\Helper\Data::class);
$storeManager = $objectManager->get(\Magento\Store\Model\StoreManagerInterface::class);
$scopeConfig = $objectManager->get(\Magento\Framework\App\Config\ScopeConfigInterface::class);

// Get allowed countries
$allowedCountries = $directoryHelper->getCountryCollection()->getAllIds();

// Get default country from store configuration
$defaultCountry = $scopeConfig->getValue(
    'general/country/default',
    \Magento\Store\Model\ScopeInterface::SCOPE_STORE,
    $storeManager->getStore()->getId()
) ?: 'EG';

// Define preferred countries with default first
$preferredCountries = [$defaultCountry, 'US', 'GB', 'SA', 'AE'];
?>
<div class="block block-customer-login">
    <div class="block-title">
        <strong id="block-customer-login-heading" role="heading" aria-level="2"><?= $block->escapeHtml(__('Forgot Your Password')) ?></strong>
    </div>
    <div class="block-content" aria-labelledby="block-customer-login-heading">
        <!-- Method Selection -->
        <div class="forgot-password-method">
            <?php if ($isHybridMode): ?>
            <div class="field choice method-selection">
                <input type="radio" name="reset_method" id="method_phone" value="phone" checked="checked" />
                <label for="method_phone"><?= $block->escapeHtml(__('Reset with Phone Number')) ?></label>
                
                <input type="radio" name="reset_method" id="method_email" value="email" style="margin-left: 15px;" />
                <label for="method_email"><?= $block->escapeHtml(__('Reset with Email')) ?></label>
            </div>
            <?php endif; ?>
        </div>
        
        <!-- Phone Reset Flow (Stepwise UI) -->
        <div id="phone_reset_flow" class="reset-flow">
            <!-- Step 1: Enter Phone Number -->
            <div id="phone_step" class="reset-step active-step">
                <div class="field note">
                    <?= $block->escapeHtml(__('Please enter your phone number below to receive a password reset code.')) ?>
                </div>
                
                <div class="field phone required">
                    <label class="label" for="phone_number">
                        <span><?= $block->escapeHtml(__('Phone Number')) ?></span>
                    </label>
                    <div class="control phone-input-container">
                        <input name="phone_number" value="" autocomplete="off" id="phone_number" type="tel" 
                               class="input-text phone-input" title="<?= $block->escapeHtmlAttr(__('Phone Number')) ?>"
                               data-validate="{required:true}">
                    </div>
                </div>
                
                <div class="actions-toolbar">
                    <div class="primary">
                        <button type="button" id="send_otp_btn" class="action send primary">
                            <span><?= $block->escapeHtml(__('Get OTP via WhatsApp')) ?></span>
                        </button>
                    </div>
                    <div class="secondary">
                        <a class="action back" href="<?= $block->escapeUrl($block->getLoginUrl()) ?>">
                            <span><?= $block->escapeHtml(__('Back to Login')) ?></span>
                        </a>
                    </div>
                </div>
            </div>
            
            <!-- Step 2: Enter OTP -->
            <div id="otp_step" class="reset-step">
                <div class="field note">
                    <?= $block->escapeHtml(__('Enter the verification code sent to your phone.')) ?>
                    <div id="phone_display" class="phone-display"></div>
                </div>
                
                <div class="field otp required">
                    <label class="label" for="otp_code">
                        <span><?= $block->escapeHtml(__('OTP Code')) ?></span>
                    </label>
                    <div class="control">
                        <input name="otp_code" value="" autocomplete="off" id="otp_code" type="text" 
                               class="input-text" title="<?= $block->escapeHtmlAttr(__('OTP Code')) ?>"
                               data-validate="{required:true}">
                    </div>
                </div>
                
                <div class="actions-toolbar">
                    <div class="primary">
                        <button type="button" id="verify_otp_btn" class="action verify primary">
                            <span><?= $block->escapeHtml(__('Verify OTP')) ?></span>
                        </button>
                    </div>
                    <div class="secondary">
                        <button type="button" id="resend_otp_btn" class="action resend" disabled>
                            <span><?= $block->escapeHtml(__('Resend OTP')) ?> (<span id="timer">60</span>)</span>
                        </button>
                    </div>
                    <div class="tertiary">
                        <button type="button" id="back_to_phone_btn" class="action back">
                            <span><?= $block->escapeHtml(__('Edit Phone Number')) ?></span>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Step 3: Set New Password -->
            <div id="password_step" class="reset-step">
                <div class="field note">
                    <?= $block->escapeHtml(__('Your phone number has been verified. Please enter your new password.')) ?>
                </div>
                
                <div class="field password required">
                    <label class="label" for="new_password">
                        <span><?= $block->escapeHtml(__('New Password')) ?></span>
                    </label>
                    <div class="control">
                        <input name="new_password" value="" autocomplete="off" id="new_password" type="password" 
                               class="input-text" title="<?= $block->escapeHtmlAttr(__('New Password')) ?>"
                               data-validate="{required:true, 'validate-password':true}">
                    </div>
                </div>
                
                <div class="field confirmation required">
                    <label class="label" for="confirm_password">
                        <span><?= $block->escapeHtml(__('Confirm New Password')) ?></span>
                    </label>
                    <div class="control">
                        <input name="confirm_password" value="" autocomplete="off" id="confirm_password" type="password" 
                               class="input-text" title="<?= $block->escapeHtmlAttr(__('Confirm New Password')) ?>"
                               data-validate="{required:true, equalTo:'#new_password'}">
                    </div>
                </div>
                
                <div class="actions-toolbar">
                    <div class="primary">
                        <button type="button" id="reset_password_btn" class="action reset primary">
                            <span><?= $block->escapeHtml(__('Reset Password')) ?></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Email Reset Flow -->
        <?php if ($isHybridMode): ?>
        <div id="email_reset_flow" class="reset-flow" style="display: none;">
            <form class="form password forget"
                  action="<?= $block->escapeUrl($block->getUrl('*/*/forgotpasswordpost')) ?>"
                  method="post"
                  id="form-validate-email"
                  data-mage-init='{"validation":{}}'>
                <fieldset class="fieldset" data-hasrequired="<?= $block->escapeHtmlAttr(__('* Required Fields')) ?>">
                    <div class="field note">
                        <?= $block->escapeHtml(__('Please enter your email address below to receive a password reset link.')) ?>
                    </div>
                    <div class="field email required">
                        <label class="label" for="email">
                            <span><?= $block->escapeHtml(__('Email Address')) ?></span>
                        </label>
                        <div class="control">
                            <input name="email" value="" autocomplete="off" id="email" type="email" 
                                   class="input-text" title="<?= $block->escapeHtmlAttr(__('Email Address')) ?>"
                                   data-validate="{required:true, 'validate-email':true}">
                        </div>
                    </div>
                    <?= $block->getChildHtml('form_additional_info') ?>
                    <div class="actions-toolbar">
                        <div class="primary">
                            <button type="submit" class="action submit primary">
                                <span><?= $block->escapeHtml(__('Reset My Password')) ?></span>
                            </button>
                        </div>
                        <div class="secondary">
                            <a class="action back" href="<?= $block->escapeUrl($block->getLoginUrl()) ?>">
                                <span><?= $block->escapeHtml(__('Back to Login')) ?></span>
                            </a>
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
        <?php endif; ?>
        
        <!-- Messages -->
        <div id="messages_container" class="messages-container">
            <div id="error_message" class="message message-error error" style="display: none;">
                <div>
                    <span id="error_text"></span>
                </div>
            </div>
            <div id="success_message" class="message message-success success" style="display: none;">
                <div>
                    <span id="success_text"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles -->
<style>
.reset-step {
    display: none;
    margin-bottom: 25px;
    margin-top: 20px;
}
.reset-step.active-step {
    display: block;
}
.field {
    margin-bottom: 20px;
}
.field.note {
    margin-bottom: 15px;
    font-size: 14px;
}
.phone-display {
    font-weight: bold;
    margin-top: 5px;
    color: #006bb4;
}
.actions-toolbar {
    margin-top: 25px;
}
.actions-toolbar .primary,
.actions-toolbar .secondary,
.actions-toolbar .tertiary {
    margin-bottom: 10px;
}
.message {
    padding: 12px 20px;
    margin-top: 20px;
    border-radius: 2px;
}
.message-error {
    background: #fae5e5;
    color: #e02b27;
    border-left: 3px solid #e02b27;
}
.message-success {
    background: #e5efe5;
    color: #006400;
    border-left: 3px solid #006400;
}
.phone-input-container {
    max-width: 400px;
}
.method-selection {
    margin-bottom: 20px;
}
</style>

<!-- JavaScript -->
<script>
require([
    'jquery',
    'intlTelInput',
    'mage/translate',
    'mage/mage'
], function($, intlTelInput, $t) {
    'use strict';
    
    $(document).ready(function() {
        // Variables
        var iti;
        var resendTimer;
        var timerSeconds = 60;
        var phoneVerified = false;
        var verifiedPhoneNumber = '';
        
        // Initialize phone input with international format
        var phoneInput = document.getElementById("phone_number");
        if (phoneInput) {
            try {
                iti = window.intlTelInput(phoneInput, {
                    initialCountry: <?= json_encode($defaultCountry) ?>,
                    preferredCountries: <?= json_encode($preferredCountries) ?>,
                    separateDialCode: true,
                    autoHideDialCode: false,
                    nationalMode: false, // Always show in international format
                    utilsScript: "<?= $block->getViewFileUrl('MagoArab_WithoutEmail::js/utils.js') ?>"
                });
                
                // Store the instance for later use
                $(phoneInput).data('iti', iti);
            } catch (e) {
                console.error('Error initializing IntlTelInput:', e);
                showError('Error initializing phone input: ' + e.message);
            }
        }
        
        // Set initial step
        showStep('phone_step');
        
        <?php if ($isHybridMode): ?>
        // Toggle between phone and email reset
        $('input[name="reset_method"]').on('change', function() {
            if ($(this).val() === 'phone') {
                $('#phone_reset_flow').show();
                $('#email_reset_flow').hide();
            } else {
                $('#phone_reset_flow').hide();
                $('#email_reset_flow').show();
            }
        });
        <?php endif; ?>
        
        // Send OTP button click
        $('#send_otp_btn').on('click', function() {
            hideMessages();
            
            var phoneNumber = phoneInput.value;
            
            if (!phoneNumber) {
                showError($t('Please enter your phone number'));
                return;
            }
            
            // Format phone number with country code
            try {
                if (iti && typeof iti.getNumber === 'function') {
                    var formattedNumber = iti.getNumber();
                    
                    if (!formattedNumber) {
                        // Fallback: construct number from selected country data
                        var countryData = iti.getSelectedCountryData();
                        var dialCode = countryData.dialCode || '';
                        
                        // Clean the phone number (remove any non-digit except +)
                        var cleanNumber = phoneNumber.replace(/[^\d+]/g, '');
                        
                        // If number doesn't start with +, add the dial code
                        if (!cleanNumber.startsWith('+')) {
                            formattedNumber = '+' + dialCode + (cleanNumber.startsWith('0') ? cleanNumber.substring(1) : cleanNumber);
                        } else {
                            formattedNumber = cleanNumber;
                        }
                    }
                    
                    phoneNumber = formattedNumber;
                }
            } catch (error) {
                console.error('Error formatting phone number:', error);
            }
            
            // Store phone number for display
            $('#phone_display').text(phoneNumber);
            
            // Send OTP via AJAX
            $.ajax({
                url: '<?= $block->getUrl('magoarab_withoutemail/otp/send') ?>',
                type: 'POST',
                dataType: 'json',
                data: {
                    phone_number: phoneNumber,
                    type: 'forgot_password'
                },
                showLoader: true,
                beforeSend: function() {
                    $('#send_otp_btn').prop('disabled', true);
                    $('#send_otp_btn').find('span').text($t('Sending...'));
                },
                success: function(response) {
                    if (response.success) {
                        // Store the phone number for later use
                        $(phoneInput).data('phone_number', phoneNumber);
                        
                        // Move to OTP step
                        showStep('otp_step');
                        startResendTimer();
                        
                        // Show success message
                        showSuccess($t('Verification code has been sent to your phone.'));
                    } else {
                        showError(response.message || $t('Failed to send OTP. Please try again.'));
                        $('#send_otp_btn').prop('disabled', false);
                        $('#send_otp_btn').find('span').text($t('Get OTP via WhatsApp'));
                    }
                },
                error: function(xhr) {
                    let errorMsg = $t('An error occurred while sending OTP. Please try again.');
                    try {
                        const response = JSON.parse(xhr.responseText);
                        if (response && response.message) {
                            errorMsg = response.message;
                        }
                    } catch (e) {
                        console.error('Error parsing response:', e);
                    }
                    
                    showError(errorMsg);
                    $('#send_otp_btn').prop('disabled', false);
                    $('#send_otp_btn').find('span').text($t('Get OTP via WhatsApp'));
                }
            });
        });
        
        // Back to phone input
        $('#back_to_phone_btn').on('click', function() {
            showStep('phone_step');
            $('#send_otp_btn').prop('disabled', false);
            $('#send_otp_btn').find('span').text($t('Get OTP via WhatsApp'));
            
            // Clear OTP field
            $('#otp_code').val('');
            
            // Clear timer if active
            if (resendTimer) {
                clearInterval(resendTimer);
            }
        });
        
        // Resend OTP button click
        $('#resend_otp_btn').on('click', function() {
            if ($(this).prop('disabled')) {
                return;
            }
            
            // Get the phone number
            var phoneNumber = $(phoneInput).data('phone_number') || phoneInput.value;
            
            // Send OTP via AJAX
            $.ajax({
                url: '<?= $block->getUrl('magoarab_withoutemail/otp/send') ?>',
                type: 'POST',
                dataType: 'json',
                data: {
                    phone_number: phoneNumber,
                    type: 'forgot_password'
                },
                showLoader: true,
                beforeSend: function() {
                    $('#resend_otp_btn').prop('disabled', true);
                },
                success: function(response) {
                    if (response.success) {
                        startResendTimer();
                        showSuccess($t('Verification code has been resent to your phone.'));
                    } else {
                        showError(response.message || $t('Failed to resend OTP. Please try again.'));
                        $('#resend_otp_btn').prop('disabled', false);
                    }
                },
                error: function() {
                    showError($t('An error occurred while resending OTP. Please try again.'));
                    $('#resend_otp_btn').prop('disabled', false);
                }
            });
        });
        var verifiedOtpCode = '';
        // Verify OTP button click
$('#verify_otp_btn').on('click', function() {
    hideMessages();
    
    var phoneNumber = $(phoneInput).data('phone_number') || phoneInput.value;
    var otpCode = $('#otp_code').val();
    
    if (!otpCode) {
        showError($t('Please enter the OTP code'));
        return;
    }
            
            // Verify OTP via AJAX
            $.ajax({
                url: '<?= $block->getUrl('magoarab_withoutemail/otp/verify') ?>',
                type: 'POST',
                dataType: 'json',
                data: {
                    phone_number: phoneNumber,
                    otp_code: otpCode,
                    type: 'forgot_password'
                },
                showLoader: true,
                beforeSend: function() {
                    $('#verify_otp_btn').prop('disabled', true);
                    $('#verify_otp_btn').find('span').text($t('Verifying...'));
                },
                success: function(response) {
                    if (response.success) {
                        phoneVerified = true;
                        verifiedPhoneNumber = phoneNumber;
                        verifiedOtpCode = otpCode;
                        // Move to password step
                        showStep('password_step');
                        
                        // Show success message
                        showSuccess($t('Phone number verified successfully. Please set your new password.'));
                    } else {
                        showError(response.message || $t('Invalid OTP code. Please try again.'));
                        $('#verify_otp_btn').prop('disabled', false);
                        $('#verify_otp_btn').find('span').text($t('Verify OTP'));
                    }
                },
                error: function(xhr) {
                    let errorMsg = $t('An error occurred while verifying OTP. Please try again.');
                    try {
                        const response = JSON.parse(xhr.responseText);
                        if (response && response.message) {
                            errorMsg = response.message;
                        }
                    } catch (e) {
                        console.error('Error parsing response:', e);
                    }
                    
                    showError(errorMsg);
                    $('#verify_otp_btn').prop('disabled', false);
                    $('#verify_otp_btn').find('span').text($t('Verify OTP'));
                }
            });
        });
        
        // Reset Password button click
        $('#reset_password_btn').on('click', function() {
            hideMessages();
            
            if (!phoneVerified) {
        showError($t('Please verify your phone number first'));
        showStep('phone_step');
        return;
    }
            
   var newPassword = $('#new_password').val();
    var confirmPassword = $('#confirm_password').val();
    
    if (!newPassword || !confirmPassword) {
        showError($t('Please enter and confirm your new password'));
        return;
    }
    
    
    if (newPassword !== confirmPassword) {
        showError($t('The passwords do not match'));
        return;
    }
    
            
            // Reset password via AJAX
				$.ajax({
						url: '<?= $block->getUrl('magoarab_withoutemail/account/resetPasswordPost') ?>',
						type: 'POST',
						dataType: 'json',
						data: {
							phone_number: verifiedPhoneNumber,
							otp_code: verifiedOtpCode, // استخدام رمز OTP المخزن بدلاً من قراءته من الحقل
							new_password: newPassword,
							confirm_password: confirmPassword,
							is_verified: true // إرسال علامة صريحة بأن الرقم تم التحقق منه
						},
						showLoader: true,
						beforeSend: function() {
							$('#reset_password_btn').prop('disabled', true);
							$('#reset_password_btn').find('span').text($t('Resetting...'));
						},
						success: function(response) {
                    if (response.success) {
                        showSuccess(response.message || $t('Your password has been reset successfully!'));
                        
                        // Redirect to login page after 2 seconds
                        setTimeout(function() {
                            window.location.href = '<?= $block->getUrl('customer/account/login') ?>';
                        }, 2000);
                    } else {
                        showError(response.message || $t('Failed to reset password. Please try again.'));
                        $('#reset_password_btn').prop('disabled', false);
                        $('#reset_password_btn').find('span').text($t('Reset Password'));
                    }
                },
                error: function(xhr) {
                    let errorMsg = $t('An error occurred while resetting password. Please try again.');
                    try {
                        const response = JSON.parse(xhr.responseText);
                        if (response && response.message) {
                            errorMsg = response.message;
                        }
                    } catch (e) {
                        console.error('Error parsing response:', e);
                    }
                    
                    showError(errorMsg);
                    $('#reset_password_btn').prop('disabled', false);
                    $('#reset_password_btn').find('span').text($t('Reset Password'));
                }
            });
        });
        
        // Show step by ID
        function showStep(stepId) {
            $('.reset-step').removeClass('active-step');
            $('#' + stepId).addClass('active-step');
        }
        
        // Start resend timer
        function startResendTimer() {
            var secondsLeft = timerSeconds;
            $('#timer').text(secondsLeft);
            $('#resend_otp_btn').prop('disabled', true);
            
            if (resendTimer) {
                clearInterval(resendTimer);
            }
            
            resendTimer = setInterval(function() {
                secondsLeft--;
                $('#timer').text(secondsLeft);
                
                if (secondsLeft <= 0) {
                    clearInterval(resendTimer);
                    $('#resend_otp_btn').prop('disabled', false);
                }
            }, 1000);
        }
        
        // Show error message
        function showError(message) {
            $('#error_text').html(message);
            $('#error_message').show();
            $('#success_message').hide();
            
            // Scroll to message
            $('html, body').animate({
                scrollTop: $('#messages_container').offset().top - 50
            }, 200);
        }
        
        // Show success message
        function showSuccess(message) {
            $('#success_text').html(message);
            $('#success_message').show();
            $('#error_message').hide();
            
            // Scroll to message
            $('html, body').animate({
                scrollTop: $('#messages_container').offset().top - 50
            }, 200);
        }
        
        // Hide all messages
        function hideMessages() {
            $('#error_message').hide();
            $('#success_message').hide();
        }
    });
});
</script>